// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PMS_API.Data;

#nullable disable

namespace PMSAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230101080338_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PMS_API.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("HouseBlockLotNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurokSitioId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("BarangayId");

                    b.HasIndex("PurokSitioId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PMS_API.Models.Barangay", b =>
                {
                    b.Property<int>("BarangayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BarangayId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("BarangayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityMunicipalityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PurokSitioId")
                        .HasColumnType("int");

                    b.HasKey("BarangayId");

                    b.HasIndex("CityMunicipalityId");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("PMS_API.Models.BloodType", b =>
                {
                    b.Property<int>("BloodTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodTypeId"));

                    b.Property<string>("BloodTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("BloodTypeId");

                    b.ToTable("BloodTypes");
                });

            modelBuilder.Entity("PMS_API.Models.Citizenship", b =>
                {
                    b.Property<int>("CitizenshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitizenshipId"));

                    b.Property<string>("CitizenshipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("CitizenshipId");

                    b.ToTable("Citizenships");
                });

            modelBuilder.Entity("PMS_API.Models.CityMunicipality", b =>
                {
                    b.Property<int>("CityMunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityMunicipalityId"));

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<string>("CityMunicipalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("CityMunicipalityId");

                    b.ToTable("CityMunicipalities");
                });

            modelBuilder.Entity("PMS_API.Models.CivilStatus", b =>
                {
                    b.Property<int>("CivilStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CivilStatusId"));

                    b.Property<string>("CivilStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("CivilStatusId");

                    b.ToTable("CivilStatuses");
                });

            modelBuilder.Entity("PMS_API.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("PMS_API.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<int>("CivilStatusId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegisteredVoter")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrecintNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.Property<bool>("WithDriversLicense")
                        .HasColumnType("bit");

                    b.Property<bool>("WithNatId")
                        .HasColumnType("bit");

                    b.Property<bool>("WithSssGsis")
                        .HasColumnType("bit");

                    b.HasKey("PersonId");

                    b.HasIndex("AddressId");

                    b.HasIndex("BloodTypeId");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("CivilStatusId");

                    b.HasIndex("GenderId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PMS_API.Models.PurokSitio", b =>
                {
                    b.Property<int>("PurokSitioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurokSitioId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("BarangayId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PurokSitioName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurokSitioId");

                    b.HasIndex("BarangayId");

                    b.ToTable("PurokSitios");
                });

            modelBuilder.Entity("PMS_API.Models.Address", b =>
                {
                    b.HasOne("PMS_API.Models.Barangay", "Barangay")
                        .WithMany("Addresses")
                        .HasForeignKey("BarangayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Models.PurokSitio", "PurokSitio")
                        .WithMany("Addresses")
                        .HasForeignKey("PurokSitioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");

                    b.Navigation("PurokSitio");
                });

            modelBuilder.Entity("PMS_API.Models.Barangay", b =>
                {
                    b.HasOne("PMS_API.Models.CityMunicipality", "CityMunicipality")
                        .WithMany("Barangays")
                        .HasForeignKey("CityMunicipalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityMunicipality");
                });

            modelBuilder.Entity("PMS_API.Models.Person", b =>
                {
                    b.HasOne("PMS_API.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Models.BloodType", "BloodType")
                        .WithMany("People")
                        .HasForeignKey("BloodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Models.Citizenship", "Citizenship")
                        .WithMany("People")
                        .HasForeignKey("CitizenshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Models.CivilStatus", "CivilStatus")
                        .WithMany("People")
                        .HasForeignKey("CivilStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PMS_API.Models.Gender", "Gender")
                        .WithMany("People")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("BloodType");

                    b.Navigation("Citizenship");

                    b.Navigation("CivilStatus");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("PMS_API.Models.PurokSitio", b =>
                {
                    b.HasOne("PMS_API.Models.Barangay", "Barangay")
                        .WithMany("PurokSitios")
                        .HasForeignKey("BarangayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Barangay");
                });

            modelBuilder.Entity("PMS_API.Models.Barangay", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("PurokSitios");
                });

            modelBuilder.Entity("PMS_API.Models.BloodType", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("PMS_API.Models.Citizenship", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("PMS_API.Models.CityMunicipality", b =>
                {
                    b.Navigation("Barangays");
                });

            modelBuilder.Entity("PMS_API.Models.CivilStatus", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("PMS_API.Models.Gender", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("PMS_API.Models.PurokSitio", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
